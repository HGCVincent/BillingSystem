<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.billing.invoice.dao.InvoicePaymentMapper">
  <resultMap id="BaseResultMap" type="com.billing.invoice.po.InvoicePayment">
    <result column="PAYMENT_SEQ" jdbcType="DECIMAL" property="paymentSeq" />
    <result column="INV_REF_NO" jdbcType="VARCHAR" property="invRefNo" />
    <result column="CUST_ID" jdbcType="VARCHAR" property="custId" />
    <result column="PAYMENT_AMT" jdbcType="DECIMAL" property="paymentAmt" />
    <result column="PAYMENT_CURRENCY" jdbcType="VARCHAR" property="paymentCurrency" />
    <result column="DATE_OF_SETTLEMENT" jdbcType="TIMESTAMP" property="dateOfSettlement" />
    <result column="SETTLEMENT_REMARK" jdbcType="VARCHAR" property="settlementRemark" />
    <result column="MODIFY_BY" jdbcType="VARCHAR" property="modifyBy" />
    <result column="MODIFY_DATE" jdbcType="TIMESTAMP" property="modifyDate" />
    <result column="STATUS" jdbcType="VARCHAR" property="status" />
    <result column="PAYMENT_DATE" jdbcType="TIMESTAMP" property="paymentDate" />
    <result column="PAYER" jdbcType="VARCHAR" property="payer" />
    <result column="PAYER_ACCOUNT" jdbcType="VARCHAR" property="payerAccount" />
    <result column="VERSION" jdbcType="DECIMAL" property="version" />
    <result column="IS_LATEST_VER" jdbcType="VARCHAR" property="isLatestVer" />
    <result column="PAYMENT_ID" jdbcType="DECIMAL" property="paymentId" />
    <result column="CURRENT_MONTH" jdbcType="VARCHAR" property="currentMonth" />
    <result column="BILL_COMP" jdbcType="VARCHAR" property="billComp" />
    <result column="CUST_NAME" jdbcType="VARCHAR" property="custName" />
    <result column="OUTSTANDING_AMT" jdbcType="VARCHAR" property="outstandingAmt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    PAYMENT_SEQ, INV_REF_NO, CUST_ID, PAYMENT_AMT, PAYMENT_CURRENCY, DATE_OF_SETTLEMENT, 
    SETTLEMENT_REMARK, MODIFY_BY, MODIFY_DATE, STATUS, PAYMENT_DATE, PAYER, PAYER_ACCOUNT, 
    VERSION, IS_LATEST_VER, PAYMENT_ID, CURRENT_MONTH, BILL_COMP, CUST_NAME, OUTSTANDING_AMT
  </sql>
  <select id="selectByExample" parameterType="com.billing.invoice.po.InvoicePaymentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from INV_PAYMENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.billing.invoice.po.InvoicePaymentExample">
    delete from INV_PAYMENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.billing.invoice.po.InvoicePayment">
    insert into INV_PAYMENT (PAYMENT_SEQ, INV_REF_NO, CUST_ID, 
      PAYMENT_AMT, PAYMENT_CURRENCY, DATE_OF_SETTLEMENT, 
      SETTLEMENT_REMARK, MODIFY_BY, MODIFY_DATE, 
      STATUS, PAYMENT_DATE, PAYER, 
      PAYER_ACCOUNT, VERSION, IS_LATEST_VER, 
      PAYMENT_ID, CURRENT_MONTH, BILL_COMP, 
      CUST_NAME, OUTSTANDING_AMT)
    values (#{paymentSeq,jdbcType=DECIMAL}, #{invRefNo,jdbcType=VARCHAR}, #{custId,jdbcType=VARCHAR}, 
      #{paymentAmt,jdbcType=DECIMAL}, #{paymentCurrency,jdbcType=VARCHAR}, #{dateOfSettlement,jdbcType=TIMESTAMP}, 
      #{settlementRemark,jdbcType=VARCHAR}, #{modifyBy,jdbcType=VARCHAR}, #{modifyDate,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=VARCHAR}, #{paymentDate,jdbcType=TIMESTAMP}, #{payer,jdbcType=VARCHAR}, 
      #{payerAccount,jdbcType=VARCHAR}, #{version,jdbcType=DECIMAL}, #{isLatestVer,jdbcType=VARCHAR}, 
      #{paymentId,jdbcType=DECIMAL}, #{currentMonth,jdbcType=VARCHAR}, #{billComp,jdbcType=VARCHAR}, 
      #{custName,jdbcType=VARCHAR}, #{outstandingAmt,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.billing.invoice.po.InvoicePayment">
    insert into INV_PAYMENT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="paymentSeq != null">
        PAYMENT_SEQ,
      </if>
      <if test="invRefNo != null">
        INV_REF_NO,
      </if>
      <if test="custId != null">
        CUST_ID,
      </if>
      <if test="paymentAmt != null">
        PAYMENT_AMT,
      </if>
      <if test="paymentCurrency != null">
        PAYMENT_CURRENCY,
      </if>
      <if test="dateOfSettlement != null">
        DATE_OF_SETTLEMENT,
      </if>
      <if test="settlementRemark != null">
        SETTLEMENT_REMARK,
      </if>
      <if test="modifyBy != null">
        MODIFY_BY,
      </if>
      <if test="modifyDate != null">
        MODIFY_DATE,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="paymentDate != null">
        PAYMENT_DATE,
      </if>
      <if test="payer != null">
        PAYER,
      </if>
      <if test="payerAccount != null">
        PAYER_ACCOUNT,
      </if>
      <if test="version != null">
        VERSION,
      </if>
      <if test="isLatestVer != null">
        IS_LATEST_VER,
      </if>
      <if test="paymentId != null">
        PAYMENT_ID,
      </if>
      <if test="currentMonth != null">
        CURRENT_MONTH,
      </if>
      <if test="billComp != null">
        BILL_COMP,
      </if>
      <if test="custName != null">
        CUST_NAME,
      </if>
      <if test="outstandingAmt != null">
        OUTSTANDING_AMT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="paymentSeq != null">
        #{paymentSeq,jdbcType=DECIMAL},
      </if>
      <if test="invRefNo != null">
        #{invRefNo,jdbcType=VARCHAR},
      </if>
      <if test="custId != null">
        #{custId,jdbcType=VARCHAR},
      </if>
      <if test="paymentAmt != null">
        #{paymentAmt,jdbcType=DECIMAL},
      </if>
      <if test="paymentCurrency != null">
        #{paymentCurrency,jdbcType=VARCHAR},
      </if>
      <if test="dateOfSettlement != null">
        #{dateOfSettlement,jdbcType=TIMESTAMP},
      </if>
      <if test="settlementRemark != null">
        #{settlementRemark,jdbcType=VARCHAR},
      </if>
      <if test="modifyBy != null">
        #{modifyBy,jdbcType=VARCHAR},
      </if>
      <if test="modifyDate != null">
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="paymentDate != null">
        #{paymentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payer != null">
        #{payer,jdbcType=VARCHAR},
      </if>
      <if test="payerAccount != null">
        #{payerAccount,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=DECIMAL},
      </if>
      <if test="isLatestVer != null">
        #{isLatestVer,jdbcType=VARCHAR},
      </if>
      <if test="paymentId != null">
        #{paymentId,jdbcType=DECIMAL},
      </if>
      <if test="currentMonth != null">
        #{currentMonth,jdbcType=VARCHAR},
      </if>
      <if test="billComp != null">
        #{billComp,jdbcType=VARCHAR},
      </if>
      <if test="custName != null">
        #{custName,jdbcType=VARCHAR},
      </if>
      <if test="outstandingAmt != null">
        #{outstandingAmt,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.billing.invoice.po.InvoicePaymentExample" resultType="java.lang.Long">
    select count(*) from INV_PAYMENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update INV_PAYMENT
    <set>
      <if test="record.paymentSeq != null">
        PAYMENT_SEQ = #{record.paymentSeq,jdbcType=DECIMAL},
      </if>
      <if test="record.invRefNo != null">
        INV_REF_NO = #{record.invRefNo,jdbcType=VARCHAR},
      </if>
      <if test="record.custId != null">
        CUST_ID = #{record.custId,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentAmt != null">
        PAYMENT_AMT = #{record.paymentAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.paymentCurrency != null">
        PAYMENT_CURRENCY = #{record.paymentCurrency,jdbcType=VARCHAR},
      </if>
      <if test="record.dateOfSettlement != null">
        DATE_OF_SETTLEMENT = #{record.dateOfSettlement,jdbcType=TIMESTAMP},
      </if>
      <if test="record.settlementRemark != null">
        SETTLEMENT_REMARK = #{record.settlementRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyBy != null">
        MODIFY_BY = #{record.modifyBy,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyDate != null">
        MODIFY_DATE = #{record.modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentDate != null">
        PAYMENT_DATE = #{record.paymentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payer != null">
        PAYER = #{record.payer,jdbcType=VARCHAR},
      </if>
      <if test="record.payerAccount != null">
        PAYER_ACCOUNT = #{record.payerAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        VERSION = #{record.version,jdbcType=DECIMAL},
      </if>
      <if test="record.isLatestVer != null">
        IS_LATEST_VER = #{record.isLatestVer,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentId != null">
        PAYMENT_ID = #{record.paymentId,jdbcType=DECIMAL},
      </if>
      <if test="record.currentMonth != null">
        CURRENT_MONTH = #{record.currentMonth,jdbcType=VARCHAR},
      </if>
      <if test="record.billComp != null">
        BILL_COMP = #{record.billComp,jdbcType=VARCHAR},
      </if>
      <if test="record.custName != null">
        CUST_NAME = #{record.custName,jdbcType=VARCHAR},
      </if>
      <if test="record.outstandingAmt != null">
        OUTSTANDING_AMT = #{record.outstandingAmt,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update INV_PAYMENT
    set PAYMENT_SEQ = #{record.paymentSeq,jdbcType=DECIMAL},
      INV_REF_NO = #{record.invRefNo,jdbcType=VARCHAR},
      CUST_ID = #{record.custId,jdbcType=VARCHAR},
      PAYMENT_AMT = #{record.paymentAmt,jdbcType=DECIMAL},
      PAYMENT_CURRENCY = #{record.paymentCurrency,jdbcType=VARCHAR},
      DATE_OF_SETTLEMENT = #{record.dateOfSettlement,jdbcType=TIMESTAMP},
      SETTLEMENT_REMARK = #{record.settlementRemark,jdbcType=VARCHAR},
      MODIFY_BY = #{record.modifyBy,jdbcType=VARCHAR},
      MODIFY_DATE = #{record.modifyDate,jdbcType=TIMESTAMP},
      STATUS = #{record.status,jdbcType=VARCHAR},
      PAYMENT_DATE = #{record.paymentDate,jdbcType=TIMESTAMP},
      PAYER = #{record.payer,jdbcType=VARCHAR},
      PAYER_ACCOUNT = #{record.payerAccount,jdbcType=VARCHAR},
      VERSION = #{record.version,jdbcType=DECIMAL},
      IS_LATEST_VER = #{record.isLatestVer,jdbcType=VARCHAR},
      PAYMENT_ID = #{record.paymentId,jdbcType=DECIMAL},
      CURRENT_MONTH = #{record.currentMonth,jdbcType=VARCHAR},
      BILL_COMP = #{record.billComp,jdbcType=VARCHAR},
      CUST_NAME = #{record.custName,jdbcType=VARCHAR},
      OUTSTANDING_AMT = #{record.outstandingAmt,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>
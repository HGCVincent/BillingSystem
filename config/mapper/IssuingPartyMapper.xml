<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.billing.invoice.dao.IssuingPartyMapper">
  <resultMap id="BaseResultMap" type="com.billing.invoice.po.IssuingParty">
    <result column="PARTY_NAME" jdbcType="VARCHAR" property="partyName" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="PARTY_TEL" jdbcType="VARCHAR" property="partyTel" />
    <result column="CURRENCY" jdbcType="VARCHAR" property="currency" />
    <result column="BANK_ACCOUNT" jdbcType="VARCHAR" property="bankAccount" />
    <result column="BANK_NAME" jdbcType="VARCHAR" property="bankName" />
    <result column="PARTY_ID" jdbcType="DECIMAL" property="partyId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    PARTY_NAME, ADDRESS, PARTY_TEL, CURRENCY, BANK_ACCOUNT, BANK_NAME, PARTY_ID
  </sql>
  <select id="selectByExample" parameterType="com.billing.invoice.po.IssuingPartyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ISSUING_PARTY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.billing.invoice.po.IssuingPartyExample">
    delete from ISSUING_PARTY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.billing.invoice.po.IssuingParty">
    insert into ISSUING_PARTY (PARTY_NAME, ADDRESS, PARTY_TEL, 
      CURRENCY, BANK_ACCOUNT, BANK_NAME, 
      PARTY_ID)
    values (#{partyName,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{partyTel,jdbcType=VARCHAR}, 
      #{currency,jdbcType=VARCHAR}, #{bankAccount,jdbcType=VARCHAR}, #{bankName,jdbcType=VARCHAR}, 
      #{partyId,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.billing.invoice.po.IssuingParty">
    insert into ISSUING_PARTY
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="partyName != null">
        PARTY_NAME,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="partyTel != null">
        PARTY_TEL,
      </if>
      <if test="currency != null">
        CURRENCY,
      </if>
      <if test="bankAccount != null">
        BANK_ACCOUNT,
      </if>
      <if test="bankName != null">
        BANK_NAME,
      </if>
      <if test="partyId != null">
        PARTY_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="partyName != null">
        #{partyName,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="partyTel != null">
        #{partyTel,jdbcType=VARCHAR},
      </if>
      <if test="currency != null">
        #{currency,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null">
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="partyId != null">
        #{partyId,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.billing.invoice.po.IssuingPartyExample" resultType="java.lang.Long">
    select count(*) from ISSUING_PARTY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ISSUING_PARTY
    <set>
      <if test="record.partyName != null">
        PARTY_NAME = #{record.partyName,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.partyTel != null">
        PARTY_TEL = #{record.partyTel,jdbcType=VARCHAR},
      </if>
      <if test="record.currency != null">
        CURRENCY = #{record.currency,jdbcType=VARCHAR},
      </if>
      <if test="record.bankAccount != null">
        BANK_ACCOUNT = #{record.bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.bankName != null">
        BANK_NAME = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.partyId != null">
        PARTY_ID = #{record.partyId,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ISSUING_PARTY
    set PARTY_NAME = #{record.partyName,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      PARTY_TEL = #{record.partyTel,jdbcType=VARCHAR},
      CURRENCY = #{record.currency,jdbcType=VARCHAR},
      BANK_ACCOUNT = #{record.bankAccount,jdbcType=VARCHAR},
      BANK_NAME = #{record.bankName,jdbcType=VARCHAR},
      PARTY_ID = #{record.partyId,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>